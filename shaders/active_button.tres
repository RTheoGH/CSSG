[gd_resource type="VisualShader" load_steps=17 format=3 uid="uid://c4tmmkmke0w80"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_70gks"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_jnar1"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(0, 0, 0)]
operator = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_70e0e"]
input_name = "time"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_ee7wu"]
default_input_values = [1, Vector2(-1, 1), 2, Vector2(0, 0)]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_1nnw4"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0
function = 29

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_66ftf"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(2, 2)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_8lqeo"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_un6gg"]
default_input_values = [0, 255.0, 1, 0.0, 2, 0.0, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]
expanded_output_ports = [0]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_cgkoq"]
expanded_output_ports = [0]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_eadwp"]

[sub_resource type="Gradient" id="Gradient_o623n"]
offsets = PackedFloat32Array(0, 0.484043, 1)
colors = PackedColorArray(0, 0, 0, 1, 0.758192, 0.758192, 0.758191, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_itbih"]
gradient = SubResource("Gradient_o623n")
fill_from = Vector2(1, 0)
fill_to = Vector2(0, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_b3j7h"]
expanded_output_ports = [0]
texture = SubResource("GradientTexture2D_itbih")

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_0o6mi"]
parameter_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_qj0y7"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_pujna"]
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 color : source_color;
uniform sampler2D tex_frg_6;



void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p1 = n_out2p0.r;
	float n_out2p2 = n_out2p0.g;
	float n_out2p3 = n_out2p0.b;


// ColorParameter:7
	vec4 n_out7p0 = color;


// Input:13
	float n_out13p0 = TIME;


// VectorOp:16
	vec2 n_in16p1 = vec2(2.00000, 2.00000);
	vec2 n_out16p0 = vec2(n_out13p0) * n_in16p1;


// VectorFunc:15
	vec2 n_out15p0 = tan(n_out16p0);


// UVFunc:14
	vec2 n_in14p1 = vec2(-1.00000, 1.00000);
	vec2 n_out14p0 = n_out15p0 * n_in14p1 + UV;


// Texture2D:6
	vec4 n_out6p0 = texture(tex_frg_6, n_out14p0);
	float n_out6p1 = n_out6p0.r;


// VectorOp:11
	vec3 n_in11p0 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out11p0 = n_in11p0 - vec3(n_out6p1);


// VectorOp:9
	vec3 n_out9p0 = vec3(n_out7p0.xyz) * n_out11p0;


// VectorOp:8
	vec3 n_in8p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out8p0 = vec3(n_out6p1) * n_in8p1;


// VectorOp:10
	vec3 n_out10p0 = n_out9p0 + n_out8p0;


	vec3 n_out3p0;
// If:3
	float n_in3p0 = 255.00000;
	float n_in3p2 = 0.00000;
	if(abs(n_in3p0 - n_out2p1) < n_in3p2)
	{
		n_out3p0 = vec3(n_out2p0.xyz);
	}
	else if(n_in3p0 < n_out2p1)
	{
		n_out3p0 = vec3(n_out2p0.xyz);
	}
	else
	{
		n_out3p0 = vec3(n_out2p0.xyz);
	}


	vec3 n_out4p0;
// If:4
	float n_in4p1 = 0.00000;
	float n_in4p2 = 0.00001;
	if(abs(n_out2p2 - n_in4p1) < n_in4p2)
	{
		n_out4p0 = n_out3p0;
	}
	else if(n_out2p2 < n_in4p1)
	{
		n_out4p0 = n_out3p0;
	}
	else
	{
		n_out4p0 = n_out3p0;
	}


	vec3 n_out5p0;
// If:5
	float n_in5p1 = 0.00000;
	float n_in5p2 = 0.00001;
	if(abs(n_out2p3 - n_in5p1) < n_in5p2)
	{
		n_out5p0 = n_out10p0;
	}
	else if(n_out2p3 < n_in5p1)
	{
		n_out5p0 = n_out4p0;
	}
	else
	{
		n_out5p0 = n_out4p0;
	}


// Output:0
	COLOR.rgb = n_out5p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(540, 520)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_8lqeo")
nodes/fragment/2/position = Vector2(-1120, -160)
nodes/fragment/3/node = SubResource("VisualShaderNodeIf_un6gg")
nodes/fragment/3/position = Vector2(-420, -340)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_cgkoq")
nodes/fragment/4/position = Vector2(-80, -140)
nodes/fragment/5/node = SubResource("VisualShaderNodeIf_eadwp")
nodes/fragment/5/position = Vector2(280, 80)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_b3j7h")
nodes/fragment/6/position = Vector2(-1200, 540)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorParameter_0o6mi")
nodes/fragment/7/position = Vector2(-1120, 120)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_qj0y7")
nodes/fragment/8/position = Vector2(-580, 640)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorOp_pujna")
nodes/fragment/9/position = Vector2(-520, 240)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_70gks")
nodes/fragment/10/position = Vector2(-240, 440)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_jnar1")
nodes/fragment/11/position = Vector2(-840, 380)
nodes/fragment/13/node = SubResource("VisualShaderNodeInput_70e0e")
nodes/fragment/13/position = Vector2(-2500, 280)
nodes/fragment/14/node = SubResource("VisualShaderNodeUVFunc_ee7wu")
nodes/fragment/14/position = Vector2(-1580, 360)
nodes/fragment/15/node = SubResource("VisualShaderNodeVectorFunc_1nnw4")
nodes/fragment/15/position = Vector2(-1800, 240)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorOp_66ftf")
nodes/fragment/16/position = Vector2(-2100, 300)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 3, 2, 0, 3, 4, 2, 0, 3, 5, 5, 0, 0, 0, 2, 1, 3, 1, 3, 0, 4, 3, 3, 0, 4, 4, 3, 0, 4, 5, 4, 0, 5, 4, 4, 0, 5, 5, 2, 2, 4, 0, 2, 3, 5, 0, 6, 1, 8, 0, 14, 0, 6, 0, 8, 0, 10, 1, 10, 0, 5, 3, 9, 0, 10, 0, 6, 1, 11, 1, 7, 0, 9, 0, 11, 0, 9, 1, 15, 0, 14, 2, 13, 0, 16, 0, 16, 0, 15, 0)
